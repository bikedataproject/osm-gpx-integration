// <auto-generated />
using System;
using BikeDataProject.Integrations.OSM.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace BikeDataProject.Integrations.OSM.Db.Migrations
{
    [DbContext(typeof(OsmDbContext))]
    [Migration("20210103200700_ContentTypeGpx")]
    partial class ContentTypeGpx
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("BikeDataProject.Integrations.OSM.Db.Track", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityByDefaultColumn();

                    b.Property<int?>("BikeDataProjectId")
                        .HasColumnType("integer");

                    b.Property<string>("GpxContentType")
                        .HasColumnType("text");

                    b.Property<byte[]>("GpxFile")
                        .HasColumnType("bytea");

                    b.Property<string>("GpxFileName")
                        .HasColumnType("text");

                    b.Property<bool?>("IsCyclist")
                        .HasColumnType("boolean");

                    b.Property<int>("OsmState")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("OsmTimeStamp")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("OsmTrackId")
                        .HasColumnType("bigint");

                    b.Property<int>("SyncState")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("SyncTimeStamp")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string[]>("Tags")
                        .HasColumnType("text[]");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("BikeDataProject.Integrations.OSM.Db.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("OsmUser")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BikeDataProject.Integrations.OSM.Db.Track", b =>
                {
                    b.HasOne("BikeDataProject.Integrations.OSM.Db.User", "User")
                        .WithMany("Tracks")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BikeDataProject.Integrations.OSM.Db.User", b =>
                {
                    b.Navigation("Tracks");
                });
#pragma warning restore 612, 618
        }
    }
}
